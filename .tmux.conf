set -g base-index 1

set -g default-terminal "screen-256color" 
set -g status-utf8 on

bind M source-file ~/.tmux/mac.session
bind L source-file ~/.tmux/linux.session

# set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# THEME
set -g status-bg black
set -g status-fg white
set -g status-left-length 30
set -g status-right-length 60
set -g status-left ' #[default]'
set -g status-right '#[fg=blue]%I:%M%P | %h. %d#[default]'

# Bottom bar settings:
# window-status-format: 
#	first fg does color for unfocused number
#	second fg does color for unfocused text
# window-status-current-format
#	first bg does focused complete highlighting
#	first fg does focused complete color
#	second bg does following text highlighting
#	second fg does following text color

setw -g window-status-format '#[fg=white]#I #[fg=white]#W#[default]  '
#FIXME: I want to be able to use: .
setw -g window-status-current-format '#[bg=blue,fg=white]#I #[bg=blue,fg=white] #W #[bg=black,fg=blue]'

######################### SCREEN BINDINGS ######################

# $Id: screen-keys.conf,v 1.7 2010/07/31 11:39:13 nicm Exp $
#
# By Nicholas Marriott. Public domain.
#
# This configuration file binds many of the common GNU screen key bindings to
# appropriate tmux key bindings. Note that for some key bindings there is no
# tmux analogue and also that this set omits binding some commands available in
# tmux but not in screen.
#
# Note this is only a selection of key bindings and they are in addition to the
# normal tmux key bindings. This is intended as an example not as to be used
# as-is.

# Set the prefix to ^A.
unbind C-b
set -g prefix ^A
bind a send-prefix

# Bind appropriate commands similar to screen.
# lockscreen ^X x 
unbind ^X
bind ^X lock-server
unbind x
bind x lock-server

# screen ^C c 
unbind ^C
bind ^C new-window
bind c new-window

# detach ^D d
unbind ^D
bind ^D detach

# displays * 
unbind *
bind * list-clients

# next ^@ ^N sp n 
unbind ^@
bind ^@ next-window
unbind ^N
bind ^N next-window
unbind " "
bind " " next-window
unbind n
bind n next-window

# title A
unbind A
bind A command-prompt "rename-window %%"

# other ^A
unbind ^A
bind ^A last-window

# prev ^H ^P p ^? 
unbind ^H
bind ^H previous-window
unbind ^P
bind ^P previous-window
unbind p
bind p previous-window
unbind BSpace
bind BSpace previous-window

# windows ^W w 
unbind ^W
bind ^W list-windows
unbind w
bind w list-windows

# kill K k 
unbind K
bind K confirm-before "kill-window"
unbind k
bind k confirm-before "kill-window"

# redisplay ^L l 
unbind ^L
bind ^L refresh-client
unbind l
bind l refresh-client

# split -v |
#unbind |
#bind | split-window

# split windows vertically or horizonatally
bind h split-window -h
bind v split-window -v

# split windows and resize
bind | split-window 20
bind - split-window 20

# :kB: focus up
unbind Tab
bind Tab select-pane -t:.+
unbind BTab
bind BTab select-pane -t:.-

# " windowlist -b
unbind '"'
bind '"' choose-window

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf
